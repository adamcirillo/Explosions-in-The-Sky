# Configuration file

appliedenergistics2 {
    # Adds condenser mapping for singularity and matter ball.
    # Uses cobblestone for conversion [default: true]
    B:enable_condenser_mapper=true

    # Adds seed growing and fluix crafting [default: true]
    B:enable_fluid_growing_mapper=true

    # Enable mapper for Grindstone? [default: true]
    B:enable_grindstone_mapper=true

    # Enable mapper for Inscriber? [default: true]
    B:enable_inscriber_mapper=true
}


avaritia {
    # Set the EMC for the item 'Pile of Neutrons'  [range: -1 ~ 2147483647, default: 128]
    I:emc_item_item.resource.neutron_pile=128

    # Enable mapper for Compressor? [default: true]
    B:enable_compressor_mapper=true

    # Enable mapper for Extreme Crafting Table? [default: true]
    B:enable_extreme_crafting_table_mapper=true
}


botania {
    # Set the EMC value for mana. NOTE: This is effectively a multiplier. Calculation is {EMC VALUE} * {MANA REQUIRED} [range: -1 ~ 2147483647, default: 1]
    I:emc_mana=1

    # Enable mapper for Elven Trade? [default: true]
    B:enable_elven_trade_mapper=true

    # Enable mapper for Mana Infusion? [default: true]
    B:enable_mana_infusion_mapper=true

    # Enable mapper for Petal? [default: true]
    B:enable_petal_mapper=true

    # Enable mapper for Pure Daisy? [default: true]
    B:enable_pure_daisy_mapper=true

    # Enable mapper for Rune Alter? [default: true]
    B:enable_rune_alter_mapper=true
}


chisel {
    # Enable mapper for Group('andesite')? [default: true]
    B:enable_group__andesite___mapper=true

    # Enable mapper for Group('antiblock')? [default: true]
    B:enable_group__antiblock___mapper=true

    # Enable mapper for Group('appliedenergistics2:quartz_block_0')? [default: true]
    B:enable_group__appliedenergistics2_quartz_block_0___mapper=true

    # Enable mapper for Group('appliedenergistics2:sky_stone_brick_0')? [default: true]
    B:enable_group__appliedenergistics2_sky_stone_brick_0___mapper=true

    # Enable mapper for Group('basalt')? [default: true]
    B:enable_group__basalt___mapper=true

    # Enable mapper for Group('block_coal_coke')? [default: true]
    B:enable_group__block_coal_coke___mapper=true

    # Enable mapper for Group('blockAluminum')? [default: true]
    B:enable_group__blockaluminum___mapper=true

    # Enable mapper for Group('blockBronze')? [default: true]
    B:enable_group__blockbronze___mapper=true

    # Enable mapper for Group('blockCharcoal')? [default: true]
    B:enable_group__blockcharcoal___mapper=true

    # Enable mapper for Group('blockCoal')? [default: true]
    B:enable_group__blockcoal___mapper=true

    # Enable mapper for Group('blockCoalCoke')? [default: true]
    B:enable_group__blockcoalcoke___mapper=true

    # Enable mapper for Group('blockCobalt')? [default: true]
    B:enable_group__blockcobalt___mapper=true

    # Enable mapper for Group('blockCopper')? [default: true]
    B:enable_group__blockcopper___mapper=true

    # Enable mapper for Group('blockDiamond')? [default: true]
    B:enable_group__blockdiamond___mapper=true

    # Enable mapper for Group('blockElectrum')? [default: true]
    B:enable_group__blockelectrum___mapper=true

    # Enable mapper for Group('blockEmerald')? [default: true]
    B:enable_group__blockemerald___mapper=true

    # Enable mapper for Group('blockGold')? [default: true]
    B:enable_group__blockgold___mapper=true

    # Enable mapper for Group('blockInvar')? [default: true]
    B:enable_group__blockinvar___mapper=true

    # Enable mapper for Group('blockIron')? [default: true]
    B:enable_group__blockiron___mapper=true

    # Enable mapper for Group('blockLapis')? [default: true]
    B:enable_group__blocklapis___mapper=true

    # Enable mapper for Group('blockLead')? [default: true]
    B:enable_group__blocklead___mapper=true

    # Enable mapper for Group('blockNickel')? [default: true]
    B:enable_group__blocknickel___mapper=true

    # Enable mapper for Group('blockPlatinum')? [default: true]
    B:enable_group__blockplatinum___mapper=true

    # Enable mapper for Group('blockSilver')? [default: true]
    B:enable_group__blocksilver___mapper=true

    # Enable mapper for Group('blockSteel')? [default: true]
    B:enable_group__blocksteel___mapper=true

    # Enable mapper for Group('blockTin')? [default: true]
    B:enable_group__blocktin___mapper=true

    # Enable mapper for Group('blockUranium')? [default: true]
    B:enable_group__blockuranium___mapper=true

    # Enable mapper for Group('bookshelf_acacia')? [default: true]
    B:enable_group__bookshelf_acacia___mapper=true

    # Enable mapper for Group('bookshelf_birch')? [default: true]
    B:enable_group__bookshelf_birch___mapper=true

    # Enable mapper for Group('bookshelf_darkoak')? [default: true]
    B:enable_group__bookshelf_darkoak___mapper=true

    # Enable mapper for Group('bookshelf_jungle')? [default: true]
    B:enable_group__bookshelf_jungle___mapper=true

    # Enable mapper for Group('bookshelf_oak')? [default: true]
    B:enable_group__bookshelf_oak___mapper=true

    # Enable mapper for Group('bookshelf_spruce')? [default: true]
    B:enable_group__bookshelf_spruce___mapper=true

    # Enable mapper for Group('botania:biomestonea_10')? [default: true]
    B:enable_group__botania_biomestonea_10___mapper=true

    # Enable mapper for Group('botania:biomestonea_11')? [default: true]
    B:enable_group__botania_biomestonea_11___mapper=true

    # Enable mapper for Group('botania:biomestonea_12')? [default: true]
    B:enable_group__botania_biomestonea_12___mapper=true

    # Enable mapper for Group('botania:biomestonea_13')? [default: true]
    B:enable_group__botania_biomestonea_13___mapper=true

    # Enable mapper for Group('botania:biomestonea_14')? [default: true]
    B:enable_group__botania_biomestonea_14___mapper=true

    # Enable mapper for Group('botania:biomestonea_15')? [default: true]
    B:enable_group__botania_biomestonea_15___mapper=true

    # Enable mapper for Group('botania:biomestonea_8')? [default: true]
    B:enable_group__botania_biomestonea_8___mapper=true

    # Enable mapper for Group('botania:biomestonea_9')? [default: true]
    B:enable_group__botania_biomestonea_9___mapper=true

    # Enable mapper for Group('botania:biomestoneb_0')? [default: true]
    B:enable_group__botania_biomestoneb_0___mapper=true

    # Enable mapper for Group('botania:biomestoneb_1')? [default: true]
    B:enable_group__botania_biomestoneb_1___mapper=true

    # Enable mapper for Group('botania:biomestoneb_2')? [default: true]
    B:enable_group__botania_biomestoneb_2___mapper=true

    # Enable mapper for Group('botania:biomestoneb_3')? [default: true]
    B:enable_group__botania_biomestoneb_3___mapper=true

    # Enable mapper for Group('botania:biomestoneb_4')? [default: true]
    B:enable_group__botania_biomestoneb_4___mapper=true

    # Enable mapper for Group('botania:biomestoneb_5')? [default: true]
    B:enable_group__botania_biomestoneb_5___mapper=true

    # Enable mapper for Group('botania:biomestoneb_6')? [default: true]
    B:enable_group__botania_biomestoneb_6___mapper=true

    # Enable mapper for Group('botania:biomestoneb_7')? [default: true]
    B:enable_group__botania_biomestoneb_7___mapper=true

    # Enable mapper for Group('botania:dreamwood_1')? [default: true]
    B:enable_group__botania_dreamwood_1___mapper=true

    # Enable mapper for Group('botania:livingrock_1')? [default: true]
    B:enable_group__botania_livingrock_1___mapper=true

    # Enable mapper for Group('botania:livingwood_1')? [default: true]
    B:enable_group__botania_livingwood_1___mapper=true

    # Enable mapper for Group('botania:quartztypeblaze_0')? [default: true]
    B:enable_group__botania_quartztypeblaze_0___mapper=true

    # Enable mapper for Group('botania:quartztypedark_0')? [default: true]
    B:enable_group__botania_quartztypedark_0___mapper=true

    # Enable mapper for Group('botania:quartztypeelf_0')? [default: true]
    B:enable_group__botania_quartztypeelf_0___mapper=true

    # Enable mapper for Group('botania:quartztypelavender_0')? [default: true]
    B:enable_group__botania_quartztypelavender_0___mapper=true

    # Enable mapper for Group('botania:quartztypemana_0')? [default: true]
    B:enable_group__botania_quartztypemana_0___mapper=true

    # Enable mapper for Group('botania:quartztypered_0')? [default: true]
    B:enable_group__botania_quartztypered_0___mapper=true

    # Enable mapper for Group('botania:quartztypesunny_0')? [default: true]
    B:enable_group__botania_quartztypesunny_0___mapper=true

    # Enable mapper for Group('bricks')? [default: true]
    B:enable_group__bricks___mapper=true

    # Enable mapper for Group('brownstone')? [default: true]
    B:enable_group__brownstone___mapper=true

    # Enable mapper for Group('brownstone_tconstruct')? [default: true]
    B:enable_group__brownstone_tconstruct___mapper=true

    # Enable mapper for Group('carpet_black')? [default: true]
    B:enable_group__carpet_black___mapper=true

    # Enable mapper for Group('carpet_blue')? [default: true]
    B:enable_group__carpet_blue___mapper=true

    # Enable mapper for Group('carpet_brown')? [default: true]
    B:enable_group__carpet_brown___mapper=true

    # Enable mapper for Group('carpet_cyan')? [default: true]
    B:enable_group__carpet_cyan___mapper=true

    # Enable mapper for Group('carpet_gray')? [default: true]
    B:enable_group__carpet_gray___mapper=true

    # Enable mapper for Group('carpet_green')? [default: true]
    B:enable_group__carpet_green___mapper=true

    # Enable mapper for Group('carpet_lightblue')? [default: true]
    B:enable_group__carpet_lightblue___mapper=true

    # Enable mapper for Group('carpet_lightgray')? [default: true]
    B:enable_group__carpet_lightgray___mapper=true

    # Enable mapper for Group('carpet_lime')? [default: true]
    B:enable_group__carpet_lime___mapper=true

    # Enable mapper for Group('carpet_magenta')? [default: true]
    B:enable_group__carpet_magenta___mapper=true

    # Enable mapper for Group('carpet_orange')? [default: true]
    B:enable_group__carpet_orange___mapper=true

    # Enable mapper for Group('carpet_pink')? [default: true]
    B:enable_group__carpet_pink___mapper=true

    # Enable mapper for Group('carpet_purple')? [default: true]
    B:enable_group__carpet_purple___mapper=true

    # Enable mapper for Group('carpet_red')? [default: true]
    B:enable_group__carpet_red___mapper=true

    # Enable mapper for Group('carpet_white')? [default: true]
    B:enable_group__carpet_white___mapper=true

    # Enable mapper for Group('carpet_yellow')? [default: true]
    B:enable_group__carpet_yellow___mapper=true

    # Enable mapper for Group('certus')? [default: true]
    B:enable_group__certus___mapper=true

    # Enable mapper for Group('cloud')? [default: true]
    B:enable_group__cloud___mapper=true

    # Enable mapper for Group('cobblestone')? [default: true]
    B:enable_group__cobblestone___mapper=true

    # Enable mapper for Group('cobblestonemossy')? [default: true]
    B:enable_group__cobblestonemossy___mapper=true

    # Enable mapper for Group('concrete_black')? [default: true]
    B:enable_group__concrete_black___mapper=true

    # Enable mapper for Group('concrete_blue')? [default: true]
    B:enable_group__concrete_blue___mapper=true

    # Enable mapper for Group('concrete_brown')? [default: true]
    B:enable_group__concrete_brown___mapper=true

    # Enable mapper for Group('concrete_cyan')? [default: true]
    B:enable_group__concrete_cyan___mapper=true

    # Enable mapper for Group('concrete_gray')? [default: true]
    B:enable_group__concrete_gray___mapper=true

    # Enable mapper for Group('concrete_green')? [default: true]
    B:enable_group__concrete_green___mapper=true

    # Enable mapper for Group('concrete_lightblue')? [default: true]
    B:enable_group__concrete_lightblue___mapper=true

    # Enable mapper for Group('concrete_lightgray')? [default: true]
    B:enable_group__concrete_lightgray___mapper=true

    # Enable mapper for Group('concrete_lime')? [default: true]
    B:enable_group__concrete_lime___mapper=true

    # Enable mapper for Group('concrete_magenta')? [default: true]
    B:enable_group__concrete_magenta___mapper=true

    # Enable mapper for Group('concrete_orange')? [default: true]
    B:enable_group__concrete_orange___mapper=true

    # Enable mapper for Group('concrete_pink')? [default: true]
    B:enable_group__concrete_pink___mapper=true

    # Enable mapper for Group('concrete_purple')? [default: true]
    B:enable_group__concrete_purple___mapper=true

    # Enable mapper for Group('concrete_red')? [default: true]
    B:enable_group__concrete_red___mapper=true

    # Enable mapper for Group('concrete_white')? [default: true]
    B:enable_group__concrete_white___mapper=true

    # Enable mapper for Group('concrete_yellow')? [default: true]
    B:enable_group__concrete_yellow___mapper=true

    # Enable mapper for Group('darkutils:pearl_block_1')? [default: true]
    B:enable_group__darkutils_pearl_block_1___mapper=true

    # Enable mapper for Group('diorite')? [default: true]
    B:enable_group__diorite___mapper=true

    # Enable mapper for Group('dirt')? [default: true]
    B:enable_group__dirt___mapper=true

    # Enable mapper for Group('endstone')? [default: true]
    B:enable_group__endstone___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_0')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_0___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_10')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_10___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_11')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_11___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_12')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_12___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_13')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_13___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_14')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_14___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_15')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_15___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_1')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_1___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_2')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_2___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_3')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_3___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_4')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_4___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_5')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_5___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_6')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_6___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_7')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_7___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_8')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_8___mapper=true

    # Enable mapper for Group('environmentalmaterials:alabaster_bricks_9')? [default: true]
    B:enable_group__environmentalmaterials_alabaster_bricks_9___mapper=true

    # Enable mapper for Group('environmentaltech:aethium_0')? [default: true]
    B:enable_group__environmentaltech_aethium_0___mapper=true

    # Enable mapper for Group('environmentaltech:erodium_0')? [default: true]
    B:enable_group__environmentaltech_erodium_0___mapper=true

    # Enable mapper for Group('environmentaltech:ionite_0')? [default: true]
    B:enable_group__environmentaltech_ionite_0___mapper=true

    # Enable mapper for Group('environmentaltech:kyronite_0')? [default: true]
    B:enable_group__environmentaltech_kyronite_0___mapper=true

    # Enable mapper for Group('environmentaltech:lonsdaleite_0')? [default: true]
    B:enable_group__environmentaltech_lonsdaleite_0___mapper=true

    # Enable mapper for Group('environmentaltech:pladium_0')? [default: true]
    B:enable_group__environmentaltech_pladium_0___mapper=true

    # Enable mapper for Group('factory')? [default: true]
    B:enable_group__factory___mapper=true

    # Enable mapper for Group('futura')? [default: true]
    B:enable_group__futura___mapper=true

    # Enable mapper for Group('glass')? [default: true]
    B:enable_group__glass___mapper=true

    # Enable mapper for Group('glassdyedblack')? [default: true]
    B:enable_group__glassdyedblack___mapper=true

    # Enable mapper for Group('glassdyedblue')? [default: true]
    B:enable_group__glassdyedblue___mapper=true

    # Enable mapper for Group('glassdyedbrown')? [default: true]
    B:enable_group__glassdyedbrown___mapper=true

    # Enable mapper for Group('glassdyedcyan')? [default: true]
    B:enable_group__glassdyedcyan___mapper=true

    # Enable mapper for Group('glassdyedgray')? [default: true]
    B:enable_group__glassdyedgray___mapper=true

    # Enable mapper for Group('glassdyedgreen')? [default: true]
    B:enable_group__glassdyedgreen___mapper=true

    # Enable mapper for Group('glassdyedlightblue')? [default: true]
    B:enable_group__glassdyedlightblue___mapper=true

    # Enable mapper for Group('glassdyedlightgray')? [default: true]
    B:enable_group__glassdyedlightgray___mapper=true

    # Enable mapper for Group('glassdyedlime')? [default: true]
    B:enable_group__glassdyedlime___mapper=true

    # Enable mapper for Group('glassdyedmagenta')? [default: true]
    B:enable_group__glassdyedmagenta___mapper=true

    # Enable mapper for Group('glassdyedorange')? [default: true]
    B:enable_group__glassdyedorange___mapper=true

    # Enable mapper for Group('glassdyedpink')? [default: true]
    B:enable_group__glassdyedpink___mapper=true

    # Enable mapper for Group('glassdyedpurple')? [default: true]
    B:enable_group__glassdyedpurple___mapper=true

    # Enable mapper for Group('glassdyedred')? [default: true]
    B:enable_group__glassdyedred___mapper=true

    # Enable mapper for Group('glassdyedwhite')? [default: true]
    B:enable_group__glassdyedwhite___mapper=true

    # Enable mapper for Group('glassdyedyellow')? [default: true]
    B:enable_group__glassdyedyellow___mapper=true

    # Enable mapper for Group('glasspane')? [default: true]
    B:enable_group__glasspane___mapper=true

    # Enable mapper for Group('glasspanedyedblack')? [default: true]
    B:enable_group__glasspanedyedblack___mapper=true

    # Enable mapper for Group('glasspanedyedblue')? [default: true]
    B:enable_group__glasspanedyedblue___mapper=true

    # Enable mapper for Group('glasspanedyedbrown')? [default: true]
    B:enable_group__glasspanedyedbrown___mapper=true

    # Enable mapper for Group('glasspanedyedcyan')? [default: true]
    B:enable_group__glasspanedyedcyan___mapper=true

    # Enable mapper for Group('glasspanedyedgray')? [default: true]
    B:enable_group__glasspanedyedgray___mapper=true

    # Enable mapper for Group('glasspanedyedgreen')? [default: true]
    B:enable_group__glasspanedyedgreen___mapper=true

    # Enable mapper for Group('glasspanedyedlightblue')? [default: true]
    B:enable_group__glasspanedyedlightblue___mapper=true

    # Enable mapper for Group('glasspanedyedlightgray')? [default: true]
    B:enable_group__glasspanedyedlightgray___mapper=true

    # Enable mapper for Group('glasspanedyedlime')? [default: true]
    B:enable_group__glasspanedyedlime___mapper=true

    # Enable mapper for Group('glasspanedyedmagenta')? [default: true]
    B:enable_group__glasspanedyedmagenta___mapper=true

    # Enable mapper for Group('glasspanedyedorange')? [default: true]
    B:enable_group__glasspanedyedorange___mapper=true

    # Enable mapper for Group('glasspanedyedpink')? [default: true]
    B:enable_group__glasspanedyedpink___mapper=true

    # Enable mapper for Group('glasspanedyedpurple')? [default: true]
    B:enable_group__glasspanedyedpurple___mapper=true

    # Enable mapper for Group('glasspanedyedred')? [default: true]
    B:enable_group__glasspanedyedred___mapper=true

    # Enable mapper for Group('glasspanedyedwhite')? [default: true]
    B:enable_group__glasspanedyedwhite___mapper=true

    # Enable mapper for Group('glasspanedyedyellow')? [default: true]
    B:enable_group__glasspanedyedyellow___mapper=true

    # Enable mapper for Group('glowstone')? [default: true]
    B:enable_group__glowstone___mapper=true

    # Enable mapper for Group('granite')? [default: true]
    B:enable_group__granite___mapper=true

    # Enable mapper for Group('hardenedclay')? [default: true]
    B:enable_group__hardenedclay___mapper=true

    # Enable mapper for Group('ice')? [default: true]
    B:enable_group__ice___mapper=true

    # Enable mapper for Group('ironpane')? [default: true]
    B:enable_group__ironpane___mapper=true

    # Enable mapper for Group('jasper')? [default: true]
    B:enable_group__jasper___mapper=true

    # Enable mapper for Group('laboratory')? [default: true]
    B:enable_group__laboratory___mapper=true

    # Enable mapper for Group('lavastone')? [default: true]
    B:enable_group__lavastone___mapper=true

    # Enable mapper for Group('limestone')? [default: true]
    B:enable_group__limestone___mapper=true

    # Enable mapper for Group('marble')? [default: true]
    B:enable_group__marble___mapper=true

    # Enable mapper for Group('natura:nether_planks_0')? [default: true]
    B:enable_group__natura_nether_planks_0___mapper=true

    # Enable mapper for Group('natura:nether_planks_1')? [default: true]
    B:enable_group__natura_nether_planks_1___mapper=true

    # Enable mapper for Group('natura:nether_planks_2')? [default: true]
    B:enable_group__natura_nether_planks_2___mapper=true

    # Enable mapper for Group('natura:nether_planks_3')? [default: true]
    B:enable_group__natura_nether_planks_3___mapper=true

    # Enable mapper for Group('natura:overworld_planks_0')? [default: true]
    B:enable_group__natura_overworld_planks_0___mapper=true

    # Enable mapper for Group('natura:overworld_planks_1')? [default: true]
    B:enable_group__natura_overworld_planks_1___mapper=true

    # Enable mapper for Group('natura:overworld_planks_2')? [default: true]
    B:enable_group__natura_overworld_planks_2___mapper=true

    # Enable mapper for Group('natura:overworld_planks_3')? [default: true]
    B:enable_group__natura_overworld_planks_3___mapper=true

    # Enable mapper for Group('natura:overworld_planks_4')? [default: true]
    B:enable_group__natura_overworld_planks_4___mapper=true

    # Enable mapper for Group('natura:overworld_planks_5')? [default: true]
    B:enable_group__natura_overworld_planks_5___mapper=true

    # Enable mapper for Group('natura:overworld_planks_6')? [default: true]
    B:enable_group__natura_overworld_planks_6___mapper=true

    # Enable mapper for Group('natura:overworld_planks_7')? [default: true]
    B:enable_group__natura_overworld_planks_7___mapper=true

    # Enable mapper for Group('natura:overworld_planks_8')? [default: true]
    B:enable_group__natura_overworld_planks_8___mapper=true

    # Enable mapper for Group('netherbrick')? [default: true]
    B:enable_group__netherbrick___mapper=true

    # Enable mapper for Group('netherrack')? [default: true]
    B:enable_group__netherrack___mapper=true

    # Enable mapper for Group('obsidian')? [default: true]
    B:enable_group__obsidian___mapper=true

    # Enable mapper for Group('paper')? [default: true]
    B:enable_group__paper___mapper=true

    # Enable mapper for Group('planks-acacia')? [default: true]
    B:enable_group__planks_acacia___mapper=true

    # Enable mapper for Group('planks-birch')? [default: true]
    B:enable_group__planks_birch___mapper=true

    # Enable mapper for Group('planks-dark-oak')? [default: true]
    B:enable_group__planks_dark_oak___mapper=true

    # Enable mapper for Group('planks-jungle')? [default: true]
    B:enable_group__planks_jungle___mapper=true

    # Enable mapper for Group('planks-oak')? [default: true]
    B:enable_group__planks_oak___mapper=true

    # Enable mapper for Group('planks-spruce')? [default: true]
    B:enable_group__planks_spruce___mapper=true

    # Enable mapper for Group('prismarine')? [default: true]
    B:enable_group__prismarine___mapper=true

    # Enable mapper for Group('purpur')? [default: true]
    B:enable_group__purpur___mapper=true

    # Enable mapper for Group('quark:biome_cobblestone_0')? [default: true]
    B:enable_group__quark_biome_cobblestone_0___mapper=true

    # Enable mapper for Group('quark:biome_cobblestone_1')? [default: true]
    B:enable_group__quark_biome_cobblestone_1___mapper=true

    # Enable mapper for Group('quark:biome_cobblestone_2')? [default: true]
    B:enable_group__quark_biome_cobblestone_2___mapper=true

    # Enable mapper for Group('quark:biotite_block_0')? [default: true]
    B:enable_group__quark_biotite_block_0___mapper=true

    # Enable mapper for Group('quark:duskbound_block_0')? [default: true]
    B:enable_group__quark_duskbound_block_0___mapper=true

    # Enable mapper for Group('quark:elder_prismarine_0')? [default: true]
    B:enable_group__quark_elder_prismarine_0___mapper=true

    # Enable mapper for Group('quark:midori_block_0')? [default: true]
    B:enable_group__quark_midori_block_0___mapper=true

    # Enable mapper for Group('quark:soul_sandstone_0')? [default: true]
    B:enable_group__quark_soul_sandstone_0___mapper=true

    # Enable mapper for Group('quark:stained_planks_0')? [default: true]
    B:enable_group__quark_stained_planks_0___mapper=true

    # Enable mapper for Group('quark:stained_planks_10')? [default: true]
    B:enable_group__quark_stained_planks_10___mapper=true

    # Enable mapper for Group('quark:stained_planks_11')? [default: true]
    B:enable_group__quark_stained_planks_11___mapper=true

    # Enable mapper for Group('quark:stained_planks_12')? [default: true]
    B:enable_group__quark_stained_planks_12___mapper=true

    # Enable mapper for Group('quark:stained_planks_13')? [default: true]
    B:enable_group__quark_stained_planks_13___mapper=true

    # Enable mapper for Group('quark:stained_planks_14')? [default: true]
    B:enable_group__quark_stained_planks_14___mapper=true

    # Enable mapper for Group('quark:stained_planks_15')? [default: true]
    B:enable_group__quark_stained_planks_15___mapper=true

    # Enable mapper for Group('quark:stained_planks_1')? [default: true]
    B:enable_group__quark_stained_planks_1___mapper=true

    # Enable mapper for Group('quark:stained_planks_2')? [default: true]
    B:enable_group__quark_stained_planks_2___mapper=true

    # Enable mapper for Group('quark:stained_planks_3')? [default: true]
    B:enable_group__quark_stained_planks_3___mapper=true

    # Enable mapper for Group('quark:stained_planks_4')? [default: true]
    B:enable_group__quark_stained_planks_4___mapper=true

    # Enable mapper for Group('quark:stained_planks_5')? [default: true]
    B:enable_group__quark_stained_planks_5___mapper=true

    # Enable mapper for Group('quark:stained_planks_6')? [default: true]
    B:enable_group__quark_stained_planks_6___mapper=true

    # Enable mapper for Group('quark:stained_planks_7')? [default: true]
    B:enable_group__quark_stained_planks_7___mapper=true

    # Enable mapper for Group('quark:stained_planks_8')? [default: true]
    B:enable_group__quark_stained_planks_8___mapper=true

    # Enable mapper for Group('quark:stained_planks_9')? [default: true]
    B:enable_group__quark_stained_planks_9___mapper=true

    # Enable mapper for Group('quark:world_stone_bricks_6')? [default: true]
    B:enable_group__quark_world_stone_bricks_6___mapper=true

    # Enable mapper for Group('quark:world_stone_bricks_7')? [default: true]
    B:enable_group__quark_world_stone_bricks_7___mapper=true

    # Enable mapper for Group('quartz')? [default: true]
    B:enable_group__quartz___mapper=true

    # Enable mapper for Group('redstone')? [default: true]
    B:enable_group__redstone___mapper=true

    # Enable mapper for Group('sandstonered')? [default: true]
    B:enable_group__sandstonered___mapper=true

    # Enable mapper for Group('sandstoneyellow')? [default: true]
    B:enable_group__sandstoneyellow___mapper=true

    # Enable mapper for Group('scorched_block')? [default: true]
    B:enable_group__scorched_block___mapper=true

    # Enable mapper for Group('seared_block')? [default: true]
    B:enable_group__seared_block___mapper=true

    # Enable mapper for Group('slate')? [default: true]
    B:enable_group__slate___mapper=true

    # Enable mapper for Group('stonebrick')? [default: true]
    B:enable_group__stonebrick___mapper=true

    # Enable mapper for Group('temple')? [default: true]
    B:enable_group__temple___mapper=true

    # Enable mapper for Group('tyrian')? [default: true]
    B:enable_group__tyrian___mapper=true

    # Enable mapper for Group('valentines')? [default: true]
    B:enable_group__valentines___mapper=true

    # Enable mapper for Group('voidstone')? [default: true]
    B:enable_group__voidstone___mapper=true

    # Enable mapper for Group('waterstone')? [default: true]
    B:enable_group__waterstone___mapper=true

    # Enable mapper for Group('wool_black')? [default: true]
    B:enable_group__wool_black___mapper=true

    # Enable mapper for Group('wool_blue')? [default: true]
    B:enable_group__wool_blue___mapper=true

    # Enable mapper for Group('wool_brown')? [default: true]
    B:enable_group__wool_brown___mapper=true

    # Enable mapper for Group('wool_cyan')? [default: true]
    B:enable_group__wool_cyan___mapper=true

    # Enable mapper for Group('wool_gray')? [default: true]
    B:enable_group__wool_gray___mapper=true

    # Enable mapper for Group('wool_green')? [default: true]
    B:enable_group__wool_green___mapper=true

    # Enable mapper for Group('wool_lightblue')? [default: true]
    B:enable_group__wool_lightblue___mapper=true

    # Enable mapper for Group('wool_lightgray')? [default: true]
    B:enable_group__wool_lightgray___mapper=true

    # Enable mapper for Group('wool_lime')? [default: true]
    B:enable_group__wool_lime___mapper=true

    # Enable mapper for Group('wool_magenta')? [default: true]
    B:enable_group__wool_magenta___mapper=true

    # Enable mapper for Group('wool_orange')? [default: true]
    B:enable_group__wool_orange___mapper=true

    # Enable mapper for Group('wool_pink')? [default: true]
    B:enable_group__wool_pink___mapper=true

    # Enable mapper for Group('wool_purple')? [default: true]
    B:enable_group__wool_purple___mapper=true

    # Enable mapper for Group('wool_red')? [default: true]
    B:enable_group__wool_red___mapper=true

    # Enable mapper for Group('wool_white')? [default: true]
    B:enable_group__wool_white___mapper=true

    # Enable mapper for Group('wool_yellow')? [default: true]
    B:enable_group__wool_yellow___mapper=true

    # Enable mapper for Group('xtones')? [default: true]
    B:enable_group__xtones___mapper=true
}


compactmachines3 {
    # Enable mapper for Miniaturization? [default: true]
    B:enable_miniaturization_mapper=true
}


draconicevolution {
    # Set the EMC for the item 'Chaos Shard'  [range: -1 ~ 2147483647, default: 1024000]
    I:"emc_item_item.draconicevolution:chaos_shard.shard"=1024000

    # Set the EMC for the item 'Draconium Dust'  [range: -1 ~ 2147483647, default: 8192]
    I:"emc_item_item.draconicevolution:draconium_dust"=8192

    # Set the EMC for the item 'Dragon Heart'  [range: -1 ~ 2147483647, default: 262144]
    I:"emc_item_item.draconicevolution:dragon_heart"=262144

    # Enable mapper for Draconic Evolution Fusion Crafting? [default: true]
    B:enable_fusion_mapper=true
}


enderio {
    # Set the EMC for the item 'Twigs and Prunings'  [range: -1 ~ 2147483647, default: 1]
    I:emc_item_item.item_material.plantbrown=1

    # Set the EMC for the item 'Clippings and Trimmings'  [range: -1 ~ 2147483647, default: 1]
    I:emc_item_item.item_material.plantgreen=1

    # Set the EMC for the item 'Grains of Infinity'  [range: -1 ~ 2147483647, default: 32]
    I:emc_item_item.item_material.powder_infinity=32

    # EMC for zollerngalaxy:abyssalvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_abyssalvillager=0

    # EMC for moreplanets:albetius_worm [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_albetius_worm=0

    # EMC for moreplanets:alien_miner [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_alien_miner=0

    # EMC for galacticraftcore:alien_villager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_alien_villager=0

    # EMC for excompressum:angry_chicken [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_angry_chicken=0

    # EMC for quark:archaeologist [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_archaeologist=0

    # EMC for zollerngalaxy:arcon [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_arcon=0

    # EMC for quark:ashen [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ashen=0

    # EMC for galacticraftcore:astro_wolf [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_astro_wolf=0

    # EMC for zollerngalaxy:astrosvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_astrosvillager=0

    # EMC for zollerngalaxy:atheonvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_atheonvillager=0

    # EMC for mekanism:babyskeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_babyskeleton=0

    # EMC for thermalfoundation:basalz [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_basalz=0

    # EMC for minecraft:bat [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bat=0

    # EMC for moreplanets:bearry [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bearry=0

    # EMC for zollerngalaxy:bladefish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bladefish=0

    # EMC for minecraft:blaze [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blaze=0

    # EMC for thermalfoundation:blitz [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blitz=0

    # EMC for thermalfoundation:blizz [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blizz=0

    # EMC for zollerngalaxy:bloodworm [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bloodworm=0

    # EMC for zollerngalaxy:blubberfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blubberfish=0

    # EMC for tconstruct:blueslime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blueslime=0

    # EMC for zollerngalaxy:caligrovillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_caligrovillager=0

    # EMC for zollerngalaxy:candoravillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_candoravillager=0

    # EMC for minecraft:cave_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cave_spider=0

    # EMC for zollerngalaxy:centotlvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_centotlvillager=0

    # EMC for draconicevolution:chaosguardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_chaosguardian=0

    # EMC for moreplanets:cheese_cow [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cheese_cow=0

    # EMC for moreplanets:cheese_cube_eye_boss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cheese_cube_eye_boss=0

    # EMC for moreplanets:cheese_floater [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cheese_floater=0

    # EMC for moreplanets:cheese_slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cheese_slime=0

    # EMC for minecraft:chicken [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_chicken=0

    # EMC for minecraft:cow [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cow=0

    # EMC for quark:crab [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_crab=0

    # EMC for zollerngalaxy:crawler [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_crawler=0

    # EMC for minecraft:creeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_creeper=0

    # EMC for galacticraftplanets:creeper_boss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_creeper_boss=0

    # EMC for minecraft:donkey [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_donkey=0

    # EMC for botania:doppleganger [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_doppleganger=0

    # EMC for zollerngalaxy:dragon [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_dragon=0

    # EMC for quark:dweller [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_dweller=0

    # EMC for zollerngalaxy:edenvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_edenvillager=0

    # EMC for minecraft:elder_guardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_elder_guardian=0

    # EMC for minecraft:ender_dragon [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ender_dragon=0

    # EMC for minecraft:enderman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_enderman=0

    # EMC for minecraft:endermite [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_endermite=0

    # EMC for minecraft:evocation_illager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evocation_illager=0

    # EMC for galacticraftcore:evolved_boss_blaze [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_boss_blaze=0

    # EMC for galacticraftcore:evolved_boss_ghast [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_boss_ghast=0

    # EMC for galacticraftcore:evolved_coldblaze [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_coldblaze=0

    # EMC for galacticraftcore:evolved_creeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_creeper=0

    # EMC for galacticraftcore:evolved_enderman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_enderman=0

    # EMC for galacticraftcore:evolved_skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_skeleton=0

    # EMC for galacticraftcore:evolved_skeleton_boss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_skeleton_boss=0

    # EMC for galacticraftcore:evolved_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_spider=0

    # EMC for galacticraftcore:evolved_witch [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_witch=0

    # EMC for galacticraftcore:evolved_zombie [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evolved_zombie=0

    # EMC for zollerngalaxy:exodusvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_exodusvillager=0

    # EMC for extraplanets:extraplanets.evolvedancientmagmacube [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedancientmagmacube=0

    # EMC for extraplanets:extraplanets.evolvedfirebatboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedfirebatboss=0

    # EMC for extraplanets:extraplanets.evolvedghastboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedghastboss=0

    # EMC for extraplanets:extraplanets.evolvedgiantzombieboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedgiantzombieboss=0

    # EMC for extraplanets:extraplanets.evolvediceslimeboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvediceslimeboss=0

    # EMC for extraplanets:extraplanets.evolvedmagmacube [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedmagmacube=0

    # EMC for extraplanets:extraplanets.evolvedmagmacubeboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedmagmacubeboss=0

    # EMC for extraplanets:extraplanets.evolvedsnowmanboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedsnowmanboss=0

    # EMC for extraplanets:extraplanets.evolvedspacemanboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_extraplanets.evolvedspacemanboss=0

    # EMC for zollerngalaxy:facehugger [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_facehugger=0

    # EMC for zollerngalaxy:faceless [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_faceless=0

    # EMC for quark:foxhound [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_foxhound=0

    # EMC for quark:frog [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_frog=0

    # EMC for zollerngalaxy:frostgiant [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_frostgiant=0

    # EMC for zollerngalaxy:galaxyknight [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_galaxyknight=0

    # EMC for minecraft:ghast [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ghast=0

    # EMC for zollerngalaxy:ghoul [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ghoul=0

    # EMC for minecraft:giant [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_giant=0

    # EMC for moreplanets:giant_blueberry [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_giant_blueberry=0

    # EMC for moreplanets:giant_worm [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_giant_worm=0

    # EMC for deepmoblearning:glitch [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_glitch=0

    # EMC for zollerngalaxy:grayalien [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_grayalien=0

    # EMC for minecraft:guardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_guardian=0

    # EMC for zollerngalaxy:gypsyfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_gypsyfish=0

    # EMC for zollerngalaxy:harranvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_harranvillager=0

    # EMC for zollerngalaxy:helleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_helleton=0

    # EMC for minecraft:horse [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_horse=0

    # EMC for minecraft:husk [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_husk=0

    # EMC for minecraft:illusion_illager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_illusion_illager=0

    # EMC for natura:imp [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_imp=0

    # EMC for moreplanets:infected_cave_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_cave_spider=0

    # EMC for moreplanets:infected_chicken [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_chicken=0

    # EMC for moreplanets:infected_cow [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_cow=0

    # EMC for moreplanets:infected_creeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_creeper=0

    # EMC for moreplanets:infected_elder_guardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_elder_guardian=0

    # EMC for moreplanets:infected_guardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_guardian=0

    # EMC for moreplanets:infected_purlonite_slime_boss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_purlonite_slime_boss=0

    # EMC for moreplanets:infected_purlonite_slime_minion [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_purlonite_slime_minion=0

    # EMC for moreplanets:infected_purlonite_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_purlonite_spider=0

    # EMC for moreplanets:infected_purlonite_worm [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_purlonite_worm=0

    # EMC for moreplanets:infected_skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_skeleton=0

    # EMC for moreplanets:infected_snowman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_snowman=0

    # EMC for moreplanets:infected_squid [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_squid=0

    # EMC for moreplanets:infected_worm [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_worm=0

    # EMC for moreplanets:infected_zombie [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_infected_zombie=0

    # EMC for moreplanets:jelly_slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_jelly_slime=0

    # EMC for zollerngalaxy:jellyfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_jellyfish=0

    # EMC for galacticraftplanets:juicer [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_juicer=0

    # EMC for zollerngalaxy:kree [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_kree=0

    # EMC for zollerngalaxy:kriffonvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_kriffonvillager=0

    # EMC for zollerngalaxy:kronosvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_kronosvillager=0

    # EMC for zollerngalaxy:krull [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_krull=0

    # EMC for quark:leash_knot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_leash_knot=0

    # EMC for minecraft:llama [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_llama=0

    # EMC for openblocks:luggage [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_luggage=0

    # EMC for minecraft:magma_cube [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_magma_cube=0

    # EMC for zollerngalaxy:magmos [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_magmos=0

    # EMC for moreplanets:marshmallow [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_marshmallow=0

    # EMC for zollerngalaxy:mavethvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mavethvillager=0

    # EMC for zollerngalaxy:megacreeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_megacreeper=0

    # EMC for farmingforblockheads:merchant [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_merchant=0

    # EMC for openblocks:mini_me [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mini_me=0

    # EMC for moreplanets:mini_vein_floater [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mini_vein_floater=0

    # EMC for zollerngalaxy:moolus [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_moolus=0

    # EMC for minecraft:mooshroom [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mooshroom=0

    # EMC for minecraft:mule [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mule=0

    # EMC for zollerngalaxy:mummy [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mummy=0

    # EMC for moreplanets:nibiru_villager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_nibiru_villager=0

    # EMC for natura:nitrocreeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_nitrocreeper=0

    # EMC for zollerngalaxy:oasisvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_oasisvillager=0

    # EMC for minecraft:ocelot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ocelot=0

    # EMC for zollerngalaxy:oinkus [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_oinkus=0

    # EMC for zollerngalaxy:overlord [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_overlord=0

    # EMC for minecraft:parrot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_parrot=0

    # EMC for zollerngalaxy:perditavillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_perditavillager=0

    # EMC for minecraft:pig [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pig=0

    # EMC for zollerngalaxy:pigshroom [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pigshroom=0

    # EMC for industrialforegoing:pink_slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pink_slime=0

    # EMC for botania:pink_wither [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pink_wither=0

    # EMC for quark:pirate [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pirate=0

    # EMC for botania:pixie [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pixie=0

    # EMC for minecraft:polar_bear [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_polar_bear=0

    # EMC for zollerngalaxy:purgotvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_purgotvillager=0

    # EMC for minecraft:rabbit [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_rabbit=0

    # EMC for mekanism:robit [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_robit=0

    # EMC for zollerngalaxy:scorpion [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_scorpion=0

    # EMC for zollerngalaxy:seeker [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_seeker=0

    # EMC for zollerngalaxy:sentinel [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_sentinel=0

    # EMC for zollerngalaxy:sentinelhound [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_sentinelhound=0

    # EMC for zollerngalaxy:sentinelwalker [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_sentinelwalker=0

    # EMC for zollerngalaxy:shade [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shade=0

    # EMC for zollerngalaxy:shadowalien [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shadowalien=0

    # EMC for zollerngalaxy:shadowskeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shadowskeleton=0

    # EMC for zollerngalaxy:shark [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shark=0

    # EMC for minecraft:sheep [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_sheep=0

    # EMC for moreplanets:shlime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shlime=0

    # EMC for minecraft:shulker [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shulker=0

    # EMC for minecraft:silverfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_silverfish=0

    # EMC for minecraft:skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_skeleton=0

    # EMC for minecraft:skeleton_horse [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_skeleton_horse=0

    # EMC for minecraft:slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_slime=0

    # EMC for galacticraftplanets:slimeling [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_slimeling=0

    # EMC for galacticraftplanets:sludgeling [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_sludgeling=0

    # EMC for minecraft:snowman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_snowman=0

    # EMC for minecraft:spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_spider=0

    # EMC for galacticraftplanets:spider_queen [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_spider_queen=0

    # EMC for zollerngalaxy:spiderling [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_spiderling=0

    # EMC for minecraft:squid [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_squid=0

    # EMC for zollerngalaxy:squidlus [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_squidlus=0

    # EMC for quark:stoneling [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_stoneling=0

    # EMC for minecraft:stray [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_stray=0

    # EMC for moreplanets:terrasquid [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_terrasquid=0

    # EMC for moreplanets:terrastone_golem [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_terrastone_golem=0

    # EMC for zollerngalaxy:tlalocvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_tlalocvillager=0

    # EMC for zollerngalaxy:tocivillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_tocivillager=0

    # EMC for deepmoblearning:trial_cave_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_cave_spider=0

    # EMC for deepmoblearning:trial_enderman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_enderman=0

    # EMC for deepmoblearning:trial_slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_slime=0

    # EMC for deepmoblearning:trial_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_spider=0

    # EMC for moreplanets:vein_floater [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vein_floater=0

    # EMC for moreplanets:vein_floater_minion [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vein_floater_minion=0

    # EMC for minecraft:vex [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vex=0

    # EMC for zollerngalaxy:vexbot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vexbot=0

    # EMC for zollerngalaxy:vexbotboss [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vexbotboss=0

    # EMC for zollerngalaxy:vexbotgold [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vexbotgold=0

    # EMC for minecraft:villager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_villager=0

    # EMC for minecraft:villager_golem [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_villager_golem=0

    # EMC for minecraft:vindication_illager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vindication_illager=0

    # EMC for zollerngalaxy:volatile [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_volatile=0

    # EMC for zollerngalaxy:wanderer [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wanderer=0

    # EMC for zollerngalaxy:wasp [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wasp=0

    # EMC for minecraft:witch [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_witch=0

    # EMC for minecraft:wither [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wither=0

    # EMC for minecraft:wither_skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wither_skeleton=0

    # EMC for minecraft:wolf [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wolf=0

    # EMC for quark:wraith [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wraith=0

    # EMC for zollerngalaxy:xathiusvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_xathiusvillager=0

    # EMC for zollerngalaxy:xenomorph [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_xenomorph=0

    # EMC for zollerngalaxy:xenomorphqueen [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_xenomorphqueen=0

    # EMC for moreplanets:zelius_creeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zelius_creeper=0

    # EMC for moreplanets:zelius_skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zelius_skeleton=0

    # EMC for moreplanets:zelius_zombie [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zelius_zombie=0

    # EMC for moreplanets:zergius [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zergius=0

    # EMC for zollerngalaxy:zollusvillager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zollusvillager=0

    # EMC for minecraft:zombie [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie=0

    # EMC for minecraft:zombie_horse [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie_horse=0

    # EMC for minecraft:zombie_pigman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie_pigman=0

    # EMC for minecraft:zombie_villager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie_villager=0

    # Enable mapper for Alloy Smelter? [default: true]
    B:enable_alloy_smelter_mapper=true

    # Enable mapper for Sag Mill? [default: true]
    B:enable_sag_mill_mapper=true

    # Enable mapper for Slice And Splice? [default: true]
    B:enable_slice_and_splice_mapper=true

    # Enable mapper for Soul Binder? [default: true]
    B:enable_soul_binder_mapper=true

    # Enable mapper for Vat? [default: true]
    B:enable_vat_mapper=true
}


extendedcrafting {
    # Enable mapper for Combination? [default: true]
    B:enable_combination_mapper=true

    # Enable mapper for Compressor? [default: true]
    B:enable_compressor_mapper=true

    # Enable mapper for Ender Table? [default: true]
    B:enable_ender_table_mapper=true

    # Enable mapper for Table? [default: true]
    B:enable_table_mapper=true
}


extrautils2 {
    # Enable mapper for extrautils2:crusher? [default: true]
    B:enable_extrautils2_crusher_mapper=true

    # Enable mapper for extrautils2:enchanter? [default: true]
    B:enable_extrautils2_enchanter_mapper=true

    # Enable mapper for Resonator? [default: true]
    B:enable_resonator_mapper=true
}


galacticraftcore {
    # Set the EMC for the item 'Raw Meteoric Iron'  [range: -1 ~ 2147483647, default: 512]
    I:emc_item_item.meteoric_iron_raw=512

    # Enable mapper for Circuit Fabricator? [default: true]
    B:enable_circuit_fabricator_mapper=false

    # Enable mapper for Compressor? [default: true]
    B:enable_compressor_mapper=false

    # Enable mapper for NASA Workbench ASTRO_MINER_BENCH? [default: true]
    B:enable_nasa_workbench_astro_miner_bench_mapper=false

    # Enable mapper for NASA Workbench BUGGY_BENCH? [default: true]
    B:enable_nasa_workbench_buggy_bench_mapper=false

    # Enable mapper for NASA Workbench CARGO_ROCKET_BENCH? [default: true]
    B:enable_nasa_workbench_cargo_rocket_bench_mapper=false

    # Enable mapper for NASA Workbench ROCKET_BENCH_T1? [default: true]
    B:enable_nasa_workbench_rocket_bench_t1_mapper=false

    # Enable mapper for NASA Workbench ROCKET_BENCH_T2? [default: true]
    B:enable_nasa_workbench_rocket_bench_t2_mapper=false

    # Enable mapper for NASA Workbench ROCKET_BENCH_T3? [default: true]
    B:enable_nasa_workbench_rocket_bench_t3_mapper=false
}


galacticraftplanets {
    # Set the EMC for the item 'Ilmenite Ore'  [range: -1 ~ 2147483647, default: 1024]
    I:emc_item_tile.asteroids_block.ore_ilmenite_asteroids=1024

    # Set the EMC for the item 'Dense Ice'  [range: -1 ~ 2147483647, default: 1]
    I:emc_item_tile.dense_ice=1

    # Set the EMC for the item 'Desh Ore'  [range: -1 ~ 2147483647, default: 256]
    I:emc_item_tile.mars.deshmars=256
}


general {
    # Enable debugging mode [default: false]
    B:debug=false

    # Disable the mod outright? Why download it though? [default: false]
    B:disable=false

    # Display message in chat about any failed plugins/mappers [default: true]
    B:error_check=true

    # Display message in chat about any updates [default: true]
    B:update_check=true
}


gregtech {
    # Enable mapper for alloy_blast_smelter? [default: true]
    B:enable_alloy_blast_smelter_mapper=true

    # Enable mapper for alloy_smelter? [default: true]
    B:enable_alloy_smelter_mapper=false

    # Enable mapper for arc_furnace? [default: true]
    B:enable_arc_furnace_mapper=false

    # Enable mapper for assembler? [default: true]
    B:enable_assembler_mapper=false

    # Enable mapper for assembly_line? [default: true]
    B:enable_assembly_line_mapper=false

    # Enable mapper for autoclave? [default: true]
    B:enable_autoclave_mapper=false

    # Enable mapper for bender? [default: true]
    B:enable_bender_mapper=false

    # Enable mapper for brewery? [default: true]
    B:enable_brewery_mapper=false

    # Enable mapper for canner? [default: true]
    B:enable_canner_mapper=false

    # Enable mapper for centrifuge? [default: true]
    B:enable_centrifuge_mapper=false

    # Enable mapper for chemical_bath? [default: true]
    B:enable_chemical_bath_mapper=false

    # Enable mapper for chemical_reactor? [default: true]
    B:enable_chemical_reactor_mapper=false

    # Enable mapper for circuit_assembler? [default: true]
    B:enable_circuit_assembler_mapper=false

    # Enable mapper for coke_oven? [default: true]
    B:enable_coke_oven_mapper=false

    # Enable mapper for combustion_generator? [default: true]
    B:enable_combustion_generator_mapper=false

    # Enable mapper for compressor? [default: true]
    B:enable_compressor_mapper=false

    # Enable mapper for cracker? [default: true]
    B:enable_cracker_mapper=false

    # Enable mapper for cutter? [default: true]
    B:enable_cutter_mapper=false

    # Enable mapper for distillation_tower? [default: true]
    B:enable_distillation_tower_mapper=false

    # Enable mapper for distillery? [default: true]
    B:enable_distillery_mapper=false

    # Enable mapper for electric_blast_furnace? [default: true]
    B:enable_electric_blast_furnace_mapper=false

    # Enable mapper for electric_furnace? [default: true]
    B:enable_electric_furnace_mapper=false

    # Enable mapper for electrolyzer? [default: true]
    B:enable_electrolyzer_mapper=false

    # Enable mapper for electromagnetic_separator? [default: true]
    B:enable_electromagnetic_separator_mapper=false

    # Enable mapper for extractor? [default: true]
    B:enable_extractor_mapper=false

    # Enable mapper for extruder? [default: true]
    B:enable_extruder_mapper=false

    # Enable mapper for fermenter? [default: true]
    B:enable_fermenter_mapper=false

    # Enable mapper for fluid_heater? [default: true]
    B:enable_fluid_heater_mapper=false

    # Enable mapper for fluid_solidifier? [default: true]
    B:enable_fluid_solidifier_mapper=false

    # Enable mapper for forge_hammer? [default: true]
    B:enable_forge_hammer_mapper=false

    # Enable mapper for forming_press? [default: true]
    B:enable_forming_press_mapper=false

    # Enable mapper for fusion_reactor? [default: true]
    B:enable_fusion_reactor_mapper=false

    # Enable mapper for gas_collector? [default: true]
    B:enable_gas_collector_mapper=false

    # Enable mapper for gas_turbine? [default: true]
    B:enable_gas_turbine_mapper=false

    # Enable mapper for implosion_compressor? [default: true]
    B:enable_implosion_compressor_mapper=false

    # Enable mapper for large_chemical_reactor? [default: true]
    B:enable_large_chemical_reactor_mapper=false

    # Enable mapper for laser_engraver? [default: true]
    B:enable_laser_engraver_mapper=false

    # Enable mapper for lathe? [default: true]
    B:enable_lathe_mapper=false

    # Enable mapper for macerator? [default: true]
    B:enable_macerator_mapper=false

    # Enable mapper for mass_fabricator? [default: true]
    B:enable_mass_fabricator_mapper=false

    # Enable mapper for mixer? [default: true]
    B:enable_mixer_mapper=false

    # Enable mapper for ore_washer? [default: true]
    B:enable_ore_washer_mapper=false

    # Enable mapper for packer? [default: true]
    B:enable_packer_mapper=false

    # Enable mapper for plasma_generator? [default: true]
    B:enable_plasma_generator_mapper=false

    # Enable mapper for polarizer? [default: true]
    B:enable_polarizer_mapper=false

    # Enable mapper for primitive_blast_furnace? [default: true]
    B:enable_primitive_blast_furnace_mapper=false

    # Enable mapper for pyrolyse_oven? [default: true]
    B:enable_pyrolyse_oven_mapper=false

    # Enable mapper for replicator? [default: true]
    B:enable_replicator_mapper=false

    # Enable mapper for research_station? [default: true]
    B:enable_research_station_mapper=true

    # Enable mapper for rock_breaker? [default: true]
    B:enable_rock_breaker_mapper=false

    # Enable mapper for scanner? [default: true]
    B:enable_scanner_mapper=false

    # Enable mapper for semi_fluid_generator? [default: true]
    B:enable_semi_fluid_generator_mapper=false

    # Enable mapper for sifter? [default: true]
    B:enable_sifter_mapper=false

    # Enable mapper for steam_turbine? [default: true]
    B:enable_steam_turbine_mapper=false

    # Enable mapper for thermal_centrifuge? [default: true]
    B:enable_thermal_centrifuge_mapper=false

    # Enable mapper for vacuum_freezer? [default: true]
    B:enable_vacuum_freezer_mapper=false

    # Enable mapper for wiremill? [default: true]
    B:enable_wiremill_mapper=false
}


harvestcraft {
    # EMC Value for all items in oredict 'listAllberry' [range: -1 ~ 2147483647, default: 16]
    I:emc_ore_listAllberry=16

    # EMC Value for all items in oredict 'listAllfruit' [range: -1 ~ 2147483647, default: 128]
    I:emc_ore_listAllfruit=128

    # EMC Value for all items in oredict 'listAllgrain' [range: -1 ~ 2147483647, default: 24]
    I:emc_ore_listAllgrain=24

    # EMC Value for all items in oredict 'listAllgreenveggie' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllgreenveggie=64

    # EMC Value for all items in oredict 'listAllmeatraw' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllmeatraw=64

    # EMC Value for all items in oredict 'listAllnut' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllnut=64

    # EMC Value for all items in oredict 'listAllseed' [range: -1 ~ 2147483647, default: 16]
    I:emc_ore_listAllseed=16

    # EMC Value for all items in oredict 'listAllveggie' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllveggie=64

    # This may not work 100% of the time because of hacky methods used to fetch the recipes! [default: true]
    B:enable_grinder_mapper=true

    # Enable mapper for the market? [default: false]
    B:enable_market_mapper=false

    # This may not work 100% of the time because of hacky methods used to fetch the recipes! [default: true]
    B:enable_presser_mapper=true

    # This may not work 100% of the time because of hacky methods used to fetch the recipes! [default: true]
    B:enable_water_filter_mapper=true
}


mekanism {
    # Enable mapper for Chemical Infuser? [default: true]
    B:enable_chemical_infuser_mapper=true

    # Enable mapper for Chemical Oxidizer? [default: true]
    B:enable_chemical_oxidizer_mapper=true

    # Enable mapper for Chemical Washer? [default: true]
    B:enable_chemical_washer_mapper=true

    # Enable mapper for ChemicalInjectionChamber? [default: true]
    B:enable_chemicalinjectionchamber_mapper=true

    # Enable mapper for Combiner? [default: true]
    B:enable_combiner_mapper=true

    # Enable mapper for Crusher? [default: true]
    B:enable_crusher_mapper=true

    # Enable mapper for Crystallizer? [default: true]
    B:enable_crystallizer_mapper=true

    # Enable mapper for Dissolution? [default: true]
    B:enable_dissolution_mapper=true

    # Enable mapper for Electrolytic Separator? [default: true]
    B:enable_electrolytic_separator_mapper=true

    # Enable mapper for EnergizedSmelter? [default: true]
    B:enable_energizedsmelter_mapper=true

    # Enable mapper for EnrichmentChamber? [default: true]
    B:enable_enrichmentchamber_mapper=true

    # Enable mapper for Metallurgic Infuser? [default: true]
    B:enable_metallurgic_infuser_mapper=true

    # Enable mapper for OsmiumCompressor? [default: true]
    B:enable_osmiumcompressor_mapper=true

    # Enable mapper for PrecisionSawmill? [default: true]
    B:enable_precisionsawmill_mapper=true

    # Enable mapper for Pressurized Reaction Chamber? [default: true]
    B:enable_pressurized_reaction_chamber_mapper=true

    # Enable mapper for PurificationChamber? [default: true]
    B:enable_purificationchamber_mapper=true

    # Enable mapper for Rotary Condensentrator? [default: true]
    B:enable_rotary_condensentrator_mapper=true

    # Enable mapper for Solar Neutron Activator? [default: true]
    B:enable_solar_neutron_activator_mapper=true

    # Enable mapper for Thermal Evaporation? [default: true]
    B:enable_thermal_evaporation_mapper=true
}


mysticalagriculture {
    # Enable mapper for Seed Processor? [default: true]
    B:enable_seed_processor_mapper=true
}


plugins {

    gregtech {
        # Enable the plugin [default: true]
        B:enable=true
    }

    avaritia {
        # Enable the plugin [default: true]
        B:enable=true
    }

    extrautils2 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    enderio {
        # Enable the plugin [default: true]
        B:enable=true
    }

    extendedcrafting {
        # Enable the plugin [default: true]
        B:enable=true
    }

    appliedenergistics2 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    woot {
        # Enable the plugin [default: true]
        B:enable=true
    }

    chisel {
        # Enable the plugin [default: true]
        B:enable=true
    }

    tconstruct {
        # Enable the plugin [default: true]
        B:enable=true
    }

    compactmachines3 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    mekanism {
        # Enable the plugin [default: true]
        B:enable=true
    }

    harvestcraft {
        # Enable the plugin [default: true]
        B:enable=true
    }

    draconicevolution {
        # Enable the plugin [default: true]
        B:enable=true
    }

    botania {
        # Enable the plugin [default: true]
        B:enable=true
    }

    galacticraftplanets {
        # Enable the plugin [default: true]
        B:enable=true
    }

    thermalexpansion {
        # Enable the plugin [default: true]
        B:enable=true
    }

    mysticalagriculture {
        # Enable the plugin [default: true]
        B:enable=true
    }

    galacticraftcore {
        # Enable the plugin [default: true]
        B:enable=true
    }

}


tconstruct {
    # Tinkers Smelter Alloying recipe support [default: true]
    B:enable_alloy_mapper=true

    # Enable mapper for Basin? [default: true]
    B:enable_basin_mapper=true

    #  [default: true]
    B:enable_drying_mapper=true

    # Enable mapper for Melting? [default: true]
    B:enable_melting_mapper=true

    # Enable mapper for Table? [default: true]
    B:enable_table_mapper=true
}


thermalexpansion {
    # Enable mapper for Brewer? [default: true]
    B:enable_brewer_mapper=true

    # Enable mapper for Centrifuge? [default: true]
    B:enable_centrifuge_mapper=true

    # Enable mapper for Charger? [default: true]
    B:enable_charger_mapper=true

    # Enable mapper for Compactor? [default: true]
    B:enable_compactor_mapper=true

    # Enable mapper for Crucible? [default: true]
    B:enable_crucible_mapper=true

    # Enable mapper for Enchanter? [default: true]
    B:enable_enchanter_mapper=true

    # Enable mapper for Extruder? [default: true]
    B:enable_extruder_mapper=true

    # Enable mapper for Furnace? [default: true]
    B:enable_furnace_mapper=true

    # Enable mapper for Insolator? [default: true]
    B:enable_insolator_mapper=true

    # Enable mapper for Precipitator? [default: true]
    B:enable_precipitator_mapper=true

    # Enable mapper for Pulverizer? [default: true]
    B:enable_pulverizer_mapper=true

    # Enable mapper for Refinery? [default: true]
    B:enable_refinery_mapper=true

    # Enable mapper for Sawmill? [default: true]
    B:enable_sawmill_mapper=true

    # Enable mapper for Smelter? [default: true]
    B:enable_smelter_mapper=true

    # Enable mapper for Transposer? [default: true]
    B:enable_transposer_mapper=true
}


woot {
    # Enable mapper for Anvil? [default: true]
    B:enable_anvil_mapper=true
}


